# Generated by Django 5.0 on 2024-01-15 02:52

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="BomAssemlist",
            fields=[
                (
                    "title",
                    models.CharField(
                        db_column="Title",
                        max_length=50,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "item",
                    models.CharField(
                        blank=True, db_column="Item", max_length=200, null=True
                    ),
                ),
                (
                    "matl",
                    models.CharField(
                        blank=True, db_column="Matl", max_length=200, null=True
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        blank=True, db_column="Type", max_length=50, null=True
                    ),
                ),
                ("h", models.IntegerField(blank=True, db_column="H", null=True)),
                ("b", models.IntegerField(blank=True, db_column="B", null=True)),
                ("t1", models.IntegerField(blank=True, null=True)),
                ("t2", models.IntegerField(blank=True, null=True)),
                (
                    "length",
                    models.IntegerField(blank=True, db_column="Length", null=True),
                ),
                ("qty", models.IntegerField(blank=True, db_column="Qty", null=True)),
                (
                    "weight",
                    models.IntegerField(blank=True, db_column="Weight", null=True),
                ),
                (
                    "paint",
                    models.IntegerField(blank=True, db_column="Paint", null=True),
                ),
            ],
            options={
                "db_table": "bom_assemlist",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="BomList",
            fields=[
                (
                    "bcode",
                    models.IntegerField(
                        db_column="Bcode", primary_key=True, serialize=False
                    ),
                ),
                (
                    "partmark",
                    models.CharField(
                        blank=True, db_column="PartMark", max_length=50, null=True
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        blank=True, db_column="Type", max_length=200, null=True
                    ),
                ),
                ("h", models.IntegerField(blank=True, db_column="H", null=True)),
                ("b", models.IntegerField(blank=True, db_column="B", null=True)),
                ("t1", models.IntegerField(blank=True, null=True)),
                ("t2", models.IntegerField(blank=True, null=True)),
                (
                    "length",
                    models.IntegerField(blank=True, db_column="Length", null=True),
                ),
                ("qty", models.IntegerField(blank=True, db_column="Qty", null=True)),
                ("unit", models.IntegerField(blank=True, db_column="Unit", null=True)),
                (
                    "grade",
                    models.CharField(
                        blank=True, db_column="Grade", max_length=50, null=True
                    ),
                ),
                ("area", models.IntegerField(blank=True, db_column="Area", null=True)),
                (
                    "weight",
                    models.PositiveIntegerField(
                        blank=True, db_column="Weight", null=True
                    ),
                ),
            ],
            options={
                "db_table": "bom_list",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="BomPartlist",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "mark",
                    models.CharField(
                        blank=True, db_column="Mark", max_length=50, null=True
                    ),
                ),
                (
                    "profile",
                    models.CharField(
                        blank=True, db_column="Profile", max_length=50, null=True
                    ),
                ),
                ("h", models.IntegerField(blank=True, db_column="H", null=True)),
                ("b", models.IntegerField(blank=True, db_column="B", null=True)),
                ("t1", models.IntegerField(blank=True, null=True)),
                ("t2", models.IntegerField(blank=True, null=True)),
                (
                    "length",
                    models.IntegerField(blank=True, db_column="Length", null=True),
                ),
                ("qty", models.IntegerField(blank=True, db_column="Qty", null=True)),
                (
                    "grade",
                    models.CharField(
                        blank=True, db_column="Grade", max_length=50, null=True
                    ),
                ),
                ("area", models.IntegerField(blank=True, db_column="Area", null=True)),
                ("unit", models.IntegerField(blank=True, db_column="Unit", null=True)),
                (
                    "weight_1",
                    models.IntegerField(blank=True, db_column="Weight_1", null=True),
                ),
                (
                    "weight_2",
                    models.IntegerField(blank=True, db_column="Weight_2", null=True),
                ),
            ],
            options={
                "db_table": "bom_partlist",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="BomPlatelist",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "mark",
                    models.CharField(
                        blank=True, db_column="Mark", max_length=50, null=True
                    ),
                ),
                (
                    "profile",
                    models.CharField(
                        blank=True, db_column="Profile", max_length=50, null=True
                    ),
                ),
                ("d", models.IntegerField(blank=True, db_column="D", null=True)),
                ("h", models.IntegerField(blank=True, db_column="H", null=True)),
                (
                    "length",
                    models.IntegerField(blank=True, db_column="Length", null=True),
                ),
                ("qty", models.IntegerField(blank=True, db_column="Qty", null=True)),
                (
                    "grade",
                    models.CharField(
                        blank=True, db_column="Grade", max_length=50, null=True
                    ),
                ),
                ("area", models.IntegerField(blank=True, db_column="Area", null=True)),
                (
                    "weight_1",
                    models.IntegerField(blank=True, db_column="Weight_1", null=True),
                ),
                (
                    "weight_2",
                    models.IntegerField(blank=True, db_column="Weight_2", null=True),
                ),
            ],
            options={
                "db_table": "bom_platelist",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="BookList",
            fields=[
                (
                    "bcode",
                    models.IntegerField(
                        db_column="BCODE", primary_key=True, serialize=False
                    ),
                ),
                ("title", models.CharField(db_column="TITLE", max_length=200)),
                (
                    "author",
                    models.CharField(
                        blank=True, db_column="AUTHOR", max_length=20, null=True
                    ),
                ),
                (
                    "year_of_publication",
                    models.CharField(
                        blank=True,
                        db_column="YEAR-OF-PUBLICATION",
                        max_length=30,
                        null=True,
                    ),
                ),
                (
                    "price",
                    models.IntegerField(blank=True, db_column="PRICE", null=True),
                ),
            ],
            options={
                "db_table": "book_list",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="BookStore",
            fields=[
                (
                    "bscode",
                    models.IntegerField(
                        db_column="BSCODE", primary_key=True, serialize=False
                    ),
                ),
                ("name", models.CharField(db_column="NAME", max_length=100)),
                (
                    "tel",
                    models.CharField(
                        blank=True, db_column="TEL", max_length=15, null=True
                    ),
                ),
                (
                    "country",
                    models.CharField(
                        blank=True, db_column="COUNTRY", max_length=20, null=True
                    ),
                ),
                (
                    "city",
                    models.CharField(
                        blank=True, db_column="CITY", max_length=50, null=True
                    ),
                ),
            ],
            options={
                "db_table": "book_store",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Question",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("subject", models.CharField(max_length=200)),
                ("content", models.TextField()),
                ("create_date", models.DateTimeField()),
                ("modify_date", models.DateTimeField(blank=True, null=True)),
                (
                    "author",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="author_question",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "voter",
                    models.ManyToManyField(
                        related_name="voter_question", to=settings.AUTH_USER_MODEL
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Answer",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("content", models.TextField()),
                ("create_date", models.DateTimeField()),
                ("modify_date", models.DateTimeField(blank=True, null=True)),
                (
                    "author",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="author_answer",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "voter",
                    models.ManyToManyField(
                        related_name="voter_answer", to=settings.AUTH_USER_MODEL
                    ),
                ),
                (
                    "question",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="adul.question"
                    ),
                ),
            ],
        ),
    ]
